# SCsub
Import('env')
env.ParseConfig("pkg-config xkbcommon --cflags --libs")
env.ParseConfig("pkg-config wlroots --cflags --libs")
env.ParseConfig("pkg-config wayland-server --cflags --libs")

env.ParseConfig('pkg-config pixman-1 --cflags')
env.ParseConfig('pkg-config xcb --cflags')
env.ParseConfig('pkg-config dbus-1 --cflags')
env.ParseConfig('pkg-config systemd --cflags')
env.ParseConfig('pkg-config udev --cflags')
env.ParseConfig('pkg-config gbm --cflags')
env.ParseConfig('pkg-config wayland-egl --cflags')
env.ParseConfig('pkg-config wayland-client --cflags')
env.ParseConfig('pkg-config xcb-composite --cflags')
env.ParseConfig('pkg-config xcb-render --cflags')
env.ParseConfig('pkg-config xcb-shm --cflags')
# env.ParseConfig('pkg-config xcb-icccm --cflags')

# env.ParseConfig('pkg-config X11-xcb --cflags')
# env.ParseConfig('pkg-config rt --cflags')
# env.ParseConfig('pkg-config cap --cflags')
# env.ParseConfig('pkg-config xcb-fixes --cflags')
# env.ParseConfig('pkg-config drm --cflags')
# env.ParseConfig('pkg-config input --cflags')
# env.ParseConfig('pkg-config EGL --cflags')

srcs = [
    "gles3_renderer.cpp",
    "keycode_map.cpp",
    "register_types.cpp",
    "renderer.cpp",
    "wayland_display.cpp",
    "wayland_global.cpp",
    "wlr_backend.cpp",
    "wlr_compositor.cpp",
    "wlr_data_device_manager.cpp",
    "wlr_keyboard.cpp",
    "wlr_output.cpp",
    "wlr_seat.cpp",
    "wlr_surface.cpp",
    "wlr_xdg_shell.cpp",
    "wlr_xwayland.cpp",
]

module_env = env.Clone(tools=['wayland-scanner'], toolpath=['tools'])

module_env.WaylandScanner("server-header",
    "xdg-shell-protocol.h", "xdg-shell.xml")
module_env.WaylandScanner("private-code", "xdg-shell.c", "xdg-shell.xml")

module_env.add_source_files(env.modules_sources, srcs + [
    "xdg-shell.c"
])

module_env.Append(CXXFLAGS=['-DWLR_USE_UNSTABLE', '-Imodules/gdwlroots/'])
